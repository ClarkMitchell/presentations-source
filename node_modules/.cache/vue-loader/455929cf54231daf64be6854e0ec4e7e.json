{"remainingRequest":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/PhpstormProjects/vue-for-the-new/src/slideshows/introducing-eagle/IntroducingEagle.vue?vue&type=template&id=01a63725&lang=pug&","dependencies":[{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/src/slideshows/introducing-eagle/IntroducingEagle.vue","mtime":1570304313145},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js","mtime":1570304446898},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/pug-plain-loader/index.js","mtime":1521946589000},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js","mtime":1570304446898},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n#IntroducingEagle.eg-theme-agrume\n  .eg-slideshow\n    slide(enter='fadeIn' leave='bounceOutLeft')\n      .center.frontpage\n        h1 Eagle.js\n        img(src='./assets/logo.svg')\n        h4 A Slideshow Framework for Vue.js\n        eg-triggered-message(:trigger='slideTimer >= 2',\n                            :duration='6', position='top right',\n                            enter='bounceInRight', leave='bounceOutRight')\n          p Next:\n          img.control-schema(src='./assets/controlsNext.svg')\n          p Previous:\n          img.control-schema(src='./assets/controlsPrev.svg')\n\n    slide(:steps=4, enter='bounceInRight' leave='bounceOutDown')\n      h3\n        | Vue\n        .inline(class='animated infinite pulse heart')\n        | slideshows\n      .center\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 2\")\n            <b>Vue.js</b> is one of the coolest frontend frameworks out there\n        eg-transition(enter='bounceInRight' leave='bounceOutRight')\n          p(v-if=\"step >= 3\")\n            <b>Vue.js</b> supports components and transitions out of the box\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 4\")\n            <b>Eagle.js</b> adds navigation logics, scalable components, etc.\n\n    slide(:steps=6, enter='bounceInDown')\n      h3 What's in it for you\n\n      eg-transition(enter='fadeIn' leave='fadeOut')\n        .quarter(v-if='step >=2')\n          img(src='./assets/icons/basic_paperplane.svg')\n          h4 EASE OF USE\n          p Clear syntax, live preview\n\n      eg-transition(enter='fadeIn' leave='fadeOut')\n        .quarter(v-if='step >=3')\n          img(src='./assets/icons/basic_share.svg')\n          h4 MODULARITY\n          p Reuse slides and styles\n\n      eg-transition(enter='fadeIn' leave='fadeOut')\n        .quarter(v-if=\"step >= 4\")\n         img(src='./assets/icons/basic_mixer2.svg')\n         h4 INTERACTIVITY\n         p Embed forms and live demos\n\n      eg-transition(enter='fadeIn' leave='fadeOut')\n        .quarter(v-if=\"step >= 5\")\n          img(src='./assets/icons/basic_display.svg')\n          h4 PORTABILITY\n          p Play in any browser\n\n      eg-transition(enter='fadeIn' leave='fadeOut')\n        eg-modal(v-if='step >= 6')\n          h3 You right now:\n          .center\n            img(:src=\"preloadedImages['youRightNow']\",\n                :style=\"{height: '10em'}\")\n\n    slide(:steps=4, leave='fadeOut')\n      eg-transition(enter='flipInX')\n        h3 Show me the codey !!!\n\n      eg-transition(enter='flipInX')\n        p Here is how you slideshow with Eagle.js:\n\n      eg-transition(enter='flipInX')\n        eg-code-block(lang='html').\n          .eg-slideshow\n\n            slide <eg-code-comment :active='step === 2' enter='flipInY'> EAGLE SLIDE TAG</eg-code-comment>\n              h1 EagleJS <eg-code-comment :active='step === 3' enter='flipInY'> SIMPLIFIED HTML (PUG)</eg-code-comment>\n              img(src='logo.png')\n\n            slide(enter='slideInLeft', :steps=4)\n              h3 EagleJS is the greatest slideshow framework\n              p(v-if=\"step >= 2\") The best !  <eg-code-comment :active='step === 4' enter='flipInY'> BULLET POINT WITH V-IF</eg-code-comment>\n              p(v-if=\"step >= 3\") All others are failed frameworks.\n              p(v-if=\"step >= 4\") Not even real frameworks. Fake !\n\n    slide.boredYet(enter='fadeIn', :mouseNavigation='false', :keyboardNavigation='false')\n      h3 Bored yet ?\n      .center\n        p What shall I call you ?\n        input.center(v-model='username')\n        p.\n          {{ username }}<span v-if='username.length'>,</span> I got you.\n          Tell me what you like, I'll skip the rest:\n\n        .inline(v-for='category, name in slideCategories')\n            eg-toggle(:key='name', v-model='category.show', :width='30',\n                      on-text='', off-text='', on-color='#ffeeaa',\n                      @change='changeMessage(category.changeMessage)')\n              p.label {{ category.name }}\n              eg-triggered-message(:trigger='!category.show',\n                                  :duration='3', position='top right',\n                                  enter='bounceInRight', leave='bounceOutRight')\n                p(v-html=\"message(category.name)\")\n\n      .center\n        p What's your favourite ?\n        eg-radio-button.inline(v-for='(pref, i) in preferences', v-model=\"preference\",\n                        :label=\"pref.label\" :key=\"i\")\n          p {{ pref.text}}\n          eg-triggered-message(:trigger='preference=== pref.label',\n                              :duration='3', position='top right',\n                              enter='bounceInRight', leave='bounceOutRight')\n                          p {{ message(pref.label) }}\n\n      .button.prev(@click.stop='previousSlide')\n        span &lt; Prev. slide\n        br\n        span.small  Ctrl + left\n      .button.next(@click.stop='nextSlide')\n        span Next slide &gt;\n        br\n        span.small Ctrl + right\n\n    themes-slideshow(:skip=\"!slideCategories.themes.show\", :inserted='true', firstSlide=3)\n\n    awesome-inserted-slide(:username='username', :preference='preference',\n                           enter='fadeIn', leave='hinge',\n                           :skip=\"!slideCategories['slideReuse'].show\")\n\n    figures-slide(enter='flipInY', leave='rollOut', :skip=\"['slideReuse', 'themes', 'interactivity'].some(function (e) {return slideCategories[e].show})\")\n\n    slide(:steps='5' enter='fadeIn' leave='fadeOut')\n      h3 Presenter Mode\n      p.center What if I'm too lazy and cannot remember my notes when doing a presentation?\n      .center\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 2\")\n            | By default pressing P toggles Presenter Mode\n        eg-transition(enter='bounceInRight' leave='bounceOutRight')\n          p(v-if=\"step >= 3\")\n            | You have a cloned child view which shares parent's control\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 4\")\n            | Then on parent window you can have all the fun!\n        eg-transition(enter='fadeIn' leave='fadeOut')\n          eg-modal(v-if=\"step >= 5\")\n            h3 PUSH THE P BUTTON NOW!!:\n            .center\n              img(:src=\"preloadedImages['pushButton']\",\n                  :style=\"{height: '10em'}\")\n\n    slide(:steps='5' enter='fadeIn' leave='fadeOut')\n      h3(v-if=\"childWindow\")\n        | Speaker Notes\n      h3(v-if=\"parentWindow\")\n        | Presentation\n      h3(v-if=\"!childWindow && !parentWindow\")\n        | Press P if you haven't\n      p.center(v-if=\"childWindow\") We can have some fun in our parent window!\n      p.center(v-if=\"parentWindow\") I'm doing a very serious talk right now\n      .center\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 2\")\n            | Eagle.js is easy to use\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          h6(v-if=\"step >= 2 && childWindow\")\n            | we can have a timer here: {{ slideTimer }}\n        eg-transition(enter='bounceInRight' leave='bounceOutRight')\n          p(v-if=\"step >= 3\")\n            | Eagle.js has max hackability\n        eg-transition(enter='bounceInRight' leave='bounceOutRight')\n          h6(v-if=\"step >= 3 && childWindow\")\n            | we can display the current slide index here: {{ currentSlideIndex }}\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 4\")\n            | Eagle.js is modular\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          h6(v-if=\"step >= 4 && childWindow\")\n            | we also could insert our notes here (duh)\n        eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 5\")\n            | You can press P again to close child window\n\n    slide(:steps=6, leave='fadeOut')\n      eg-transition(enter='flipInX')\n        h3 To use Presenter Mode\n      eg-transition(enter='flipInX')\n        eg-code-block(lang='html').\n          .eg-slideshow\n\n            slide\n              p Eagle.is is awesome!<eg-code-comment :active='step === 2' enter='flipInY'>This would always show up</eg-code-comment>\n              p(v-if=\"parentWindow\") I can be a note!<eg-code-comment :active='step === 3' enter='flipInY'>This would only show on child window</eg-code-comment>\n              p(v-if=\"childWindow\") I can be a note too!<eg-code-comment :active='step === 4' enter='flipInY'>This would only show on parent window</eg-code-comment>\n      eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 5\")\n            | It might be counter-intuitive that '(v-if=\"parentWindow\")' is actually child window. It's because it means this window has a parent window, thus making itself a child window.\n      eg-transition(enter='bounceInLeft' leave='bounceOutLeft')\n          p(v-if=\"step >= 6\")\n            | But the good thing is that you can put notes in either parent window or child window, so it really doesn't matter!\n\n    slide(enter='zoomIn', leave='fadeOut')\n      h3 That's all folks !\n      p.center Think you can help ?\n      .center\n        img.computerkid.shadowbox(src='https://i.imgur.com/AAlntwU.gif')\n      p.center.\n        I'm not a frontend person, so everyone<br />\n        is welcome to contribute to <a href=\"https://github.com/Zulko/eagle.js\" target='_blank'> the repo</a>.\n\n    slide(enter='fadeIn')\n      h3 Thank you !\n      p This slideshow's so fresh, it has end credits.\n      end-credits(:username='username')\n",null]}