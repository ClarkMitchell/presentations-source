{"remainingRequest":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/PhpstormProjects/vue-for-the-new/src/slideshows/introducing-eagle/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/src/slideshows/introducing-eagle/Chart.vue","mtime":1570304313145},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js","mtime":1570304446898},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js","mtime":1570304446898},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport Chart from 'chart.js'\nexport default {\n  props: {\n    id: { default: () => Math.random().toString(36).substr(2, 10) },\n    width: { default: 400 },\n    height: { default: 400 },\n    data: { default: () => ({}) },\n    options: { default: () => ({}) },\n    type: { default: 'bar' }\n  },\n  data: function () {\n    return {\n      chart: null\n    }\n  },\n  mounted: function () {\n    var canvas = document.getElementById(this.id)\n    var ctx = canvas.getContext('2d')\n    // Reduce the animation steps for demo clarity.\n    this.chart = new Chart(ctx, {\n      type: this.type,\n      data: this.data,\n      options: this.options\n    })\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler: function (val) {\n        console.log('data', val)\n        console.log('chartdata', this.chart.data)\n        for (var i = 0; i < val.datasets.length; i++) {\n          this.chart.data.datasets[i].data = val.datasets[i].data\n        }\n        this.chart.update()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/slideshows/introducing-eagle","sourcesContent":["<template lang='pug'>\ncanvas(:id='id', :width='width', :height='height')\n</template>\n\n<script>\nimport Chart from 'chart.js'\nexport default {\n  props: {\n    id: { default: () => Math.random().toString(36).substr(2, 10) },\n    width: { default: 400 },\n    height: { default: 400 },\n    data: { default: () => ({}) },\n    options: { default: () => ({}) },\n    type: { default: 'bar' }\n  },\n  data: function () {\n    return {\n      chart: null\n    }\n  },\n  mounted: function () {\n    var canvas = document.getElementById(this.id)\n    var ctx = canvas.getContext('2d')\n    // Reduce the animation steps for demo clarity.\n    this.chart = new Chart(ctx, {\n      type: this.type,\n      data: this.data,\n      options: this.options\n    })\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler: function (val) {\n        console.log('data', val)\n        console.log('chartdata', this.chart.data)\n        for (var i = 0; i < val.datasets.length; i++) {\n          this.chart.data.datasets[i].data = val.datasets[i].data\n        }\n        this.chart.update()\n      }\n    }\n  }\n}\n</script>\n"]}]}