{"remainingRequest":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/babel-loader/lib/index.js!/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/PhpstormProjects/vue-for-the-new/src/slideshows/introducing-eagle/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/src/slideshows/introducing-eagle/Chart.vue","mtime":1570304313145},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js","mtime":1570304446898},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/cache-loader/dist/cjs.js","mtime":1570304446898},{"path":"/Users/clark/PhpstormProjects/vue-for-the-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\nimport Chart from 'chart.js';\nexport default {\n  props: {\n    id: {\n      default: function _default() {\n        return Math.random().toString(36).substr(2, 10);\n      }\n    },\n    width: {\n      default: 400\n    },\n    height: {\n      default: 400\n    },\n    data: {\n      default: function _default() {\n        return {};\n      }\n    },\n    options: {\n      default: function _default() {\n        return {};\n      }\n    },\n    type: {\n      default: 'bar'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    var canvas = document.getElementById(this.id);\n    var ctx = canvas.getContext('2d'); // Reduce the animation steps for demo clarity.\n\n    this.chart = new Chart(ctx, {\n      type: this.type,\n      data: this.data,\n      options: this.options\n    });\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler(val) {\n        console.log('data', val);\n        console.log('chartdata', this.chart.data);\n\n        for (var i = 0; i < val.datasets.length; i++) {\n          this.chart.data.datasets[i].data = val.datasets[i].data;\n        }\n\n        this.chart.update();\n      }\n    }\n  }\n};",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;AAKA,OAAA,KAAA,MAAA,UAAA;AACA,eAAA;AACA,SAAA;AACA,QAAA;AAAA,eAAA;AAAA,eAAA,KAAA,MAAA,GAAA,QAAA,CAAA,EAAA,EAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAAA;AAAA,KADA;AAEA,WAAA;AAAA,eAAA;AAAA,KAFA;AAGA,YAAA;AAAA,eAAA;AAAA,KAHA;AAIA,UAAA;AAAA,eAAA;AAAA,eAAA,EAAA;AAAA;AAAA,KAJA;AAKA,aAAA;AAAA,eAAA;AAAA,eAAA,EAAA;AAAA;AAAA,KALA;AAMA,UAAA;AAAA,eAAA;AAAA;AANA,GADA;AASA,QAAA,gBAAA;AACA,WAAA;AACA,aAAA;AADA,KAAA;AAGA,GAbA;AAcA,WAAA,mBAAA;AACA,QAAA,SAAA,SAAA,cAAA,CAAA,KAAA,EAAA,CAAA;AACA,QAAA,MAAA,OAAA,UAAA,CAAA,IAAA,CAAA,CAFA,CAGA;;AACA,SAAA,KAAA,GAAA,IAAA,KAAA,CAAA,GAAA,EAAA;AACA,YAAA,KAAA,IADA;AAEA,YAAA,KAAA,IAFA;AAGA,eAAA,KAAA;AAHA,KAAA,CAAA;AAKA,GAvBA;AAwBA,SAAA;AACA,UAAA;AACA,YAAA,IADA;AAEA,eAAA,iBAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA,GAAA;AACA,gBAAA,GAAA,CAAA,WAAA,EAAA,KAAA,KAAA,CAAA,IAAA;;AACA,aAAA,IAAA,IAAA,CAAA,EAAA,IAAA,IAAA,QAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACA,eAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,IAAA,GAAA,IAAA,QAAA,CAAA,CAAA,EAAA,IAAA;AACA;;AACA,aAAA,KAAA,CAAA,MAAA;AACA;AATA;AADA;AAxBA,CAAA","sourcesContent":["<template lang='pug'>\ncanvas(:id='id', :width='width', :height='height')\n</template>\n\n<script>\nimport Chart from 'chart.js'\nexport default {\n  props: {\n    id: { default: () => Math.random().toString(36).substr(2, 10) },\n    width: { default: 400 },\n    height: { default: 400 },\n    data: { default: () => ({}) },\n    options: { default: () => ({}) },\n    type: { default: 'bar' }\n  },\n  data: function () {\n    return {\n      chart: null\n    }\n  },\n  mounted: function () {\n    var canvas = document.getElementById(this.id)\n    var ctx = canvas.getContext('2d')\n    // Reduce the animation steps for demo clarity.\n    this.chart = new Chart(ctx, {\n      type: this.type,\n      data: this.data,\n      options: this.options\n    })\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler: function (val) {\n        console.log('data', val)\n        console.log('chartdata', this.chart.data)\n        for (var i = 0; i < val.datasets.length; i++) {\n          this.chart.data.datasets[i].data = val.datasets[i].data\n        }\n        this.chart.update()\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/slideshows/introducing-eagle"}]}